# Copyright Â© 2018 VMware, Inc. All Rights Reserved.
# SPDX-License-Identifier: BSD-2-Clause OR GPL-3.0-only
---
# tasks file for roles/vappvm

- name: create vapp vm "{{ vapp_vm_1 }}" from catalog
  no_log: False
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    source_catalog_name: "test_catalog"
    source_template_name: "centos7"
    source_vm_name: "CentOS7"
    hostname: "vcdcell"
    vmpassword: "rootpass"
    vmpassword_auto: "false"
    vmpassword_reset: "false"
    ip_allocation_mode: "DHCP"
    state: "present"
    power_on: "false"
    all_eulas_accepted: "true"
    storage_profile: "Standard"
    network: "web2Network"
  register: output

- name: create vapp vm  output
  debug:
    msg: "{{ output }}"

- name: create vapp vm "{{ vapp_vm_2 }}" from vapp
  no_log: False
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    source_vdc: "Terraform_VDC"
    target_vdc: "Terraform_VDC"
    source_vapp: "web"
    source_vm_name: "web1"
    hostname: "vcdcell"
    vmpassword: "rootpass"
    vmpassword_auto: "false"
    vmpassword_reset: "false"
    ip_allocation_mode: "DHCP"
    state: "present"
    power_on: "false"
    all_eulas_accepted: "true"
    storage_profile: "Standard"
    network: "web2Network"
  register: output

- name: create vapp vm  output
  debug:
    msg: "{{ output }}"

- name: power on "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    operation: "poweron"
  register: output

- name: power on vapp vm  output
  debug:
    msg: "{{ output }}"

- name: power on "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    operation: "poweron"
  register: output

- name: power on vapp vm  output
  debug:
    msg: "{{ output }}"

- name: power off "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    operation: "poweroff"
  register: output

- name: power off vapp vm  output
  debug:
    msg: "{{ output }}"

- name: power off "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    operation: "poweroff"
  register: output

- name: power off vapp vm  output
  debug:
    msg: "{{ output }}"

- name: modify "{{ vapp_vm_1 }}" cpu vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    virtual_cpus: 2
    cores_per_socket: 2
    state: "update"
  register: output

- name: update vapp vm  output
  debug:
    msg: "{{ output }}"

- name: modify "{{ vapp_vm_2 }}" cpu vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    virtual_cpus: 2
    cores_per_socket: 2
    state: "update"
  register: output

- name: update vapp vm  output
  debug:
    msg: "{{ output }}"

- name: modify "{{ vapp_vm_1 }}" memory vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    memory: 4096
    state: "update"
  register: output

- name: update vapp vm  output
  debug:
    msg: "{{ output }}"

- name: modify "{{ vapp_vm_2 }}" memory vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    memory: 4096
    state: "update"
  register: output

- name: update vapp vm  output
  debug:
    msg: "{{ output }}"

- name: modify "{{ vapp_vm_1 }}" compute policy vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    compute_policy_href: "https://vcloud.example.com/cloudapi/1.0.0/vdcComputePolicies/51"
    state: "update"
  register: output

- name: update vapp vm  output
  debug:
    msg: "{{ output }}"

- name: modify "{{ vapp_vm_2 }}" compute policy vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    compute_policy_href: "https://vcloud.example.com/cloudapi/1.0.0/vdcComputePolicies/51"
    state: "update"
  register: output

- name: update vapp vm  output
  debug:
    msg: "{{ output }}"

- name: reload "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    operation: "reloadvm"
  register: output

- name: reload vapp vm output
  debug:
    msg: "{{ output }}"

- name: reload "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    operation: "reloadvm"
  register: output

- name: reload vapp vm  output
  debug:
    msg: "{{ output }}"

- name: undeploy "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    operation: "undeploy"
  register: output

- name: undeploy vapp vm  output
  debug:
    msg: "{{ output }}"

- name: undeploy "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    operation: "undeploy"
  register: output

- name: undeploy vapp vm  output
  debug:
    msg: "{{ output }}"

- name: deploy "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    operation: "deploy"
  register: output

- name: deploy vapp vm  output
  debug:
    msg: "{{ output }}"

- name: deploy "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    operation: "deploy"
  register: output

- name: deploy vapp vm output
  debug:
    msg: "{{ output }}"

- name: delete "{{ vapp_vm_1 }}" vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_1 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    state: "absent"
  register: output

- name: delete vapp vm  output
  debug:
    msg: "{{ output }}"

- name: delete "{{ vapp_vm_2 }}" vapp vm
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    state: "absent"
  register: output

- name: delete vapp vm  output
  debug:
    msg: "{{ output }}"

- name: list "{{ vapp_vm_2 }}" vapp vm disks
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    operation: "list_disks"
  register: output

- name: list "{{ vapp_vm_2 }}" vapp vm disks output
  debug:
    msg: "{{ output }}"

- name: list "{{ vapp_vm_2 }}" vapp vm nics
  vcd_vapp_vm:
    target_vm_name: "{{ vapp_vm_2 }}"
    target_vapp: "web2"
    target_vdc: "Terraform_VDC"
    operation: "list_nics"
  register: output

- name: list "{{ vapp_vm_2 }}" vapp vm nics output
  debug:
    msg: "{{ output }}"

- name: set vm metadata
  vcd_vapp_vm:
    user: acmeadmin
    password: XXXXXXXXXX
    org: Acme
    target_vm_name: centos
    target_vapp: acme_vapp
    target_vdc: ACME_PAYG
    metadata:
      sample7: sample-value4
      sample8: sample-value4
      sample9: sample-value4
    operation: set_meta
  register: output

- name: set vm metadata output
  debug:
    msg: '{{ output }}'

- name: get vm metadata
  vcd_vapp_vm:
    user: acmeadmin
    password: XXXXXXXXXX
    org: Acme
    target_vm_name: centos
    target_vdc: ACME_PAYG
    target_vapp: acme_vapp
    operation: get_meta
  register: output

- name: get vm metadata output
  debug:
    msg: '{{ output }}'

- name: remove vm metadata
  vcd_vapp_vm:
    user: acmeadmin
    password: XXXXXXXXXX
    org: Acme
    target_vm_name: centos
    target_vapp: acme_vapp
    target_vdc: ACME_PAYG
    metadata:
      sample7: sample-value4
      sample8: sample-value4
      sample9: sample-value4
    operation: remove_meta
  register: output

- name: remove vm metadata output
  debug:
    msg: '{{ output }}'

